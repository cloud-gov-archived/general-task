---
jobs:
- name: set-self
  plan:
    - get: concourse-images
      trigger: true
    - set_pipeline: self
      file: concourse-images/pipeline.yml

- name: create-concourse-task-image
  plan:
  - get: concourse-images
    trigger: true
  - get: concourse-image-version
    params: {bump: patch}
  - put: concourse-tasks-image-repo
    params:
      build: concourse-images/task/concourse-tasks
      tag_file: concourse-image-version/version
      tag_as_latest: true
  - put: concourse-image-version
    params: {file: concourse-image-version/version}

- name: create-oracle-image
  plan:
  - get: oracle-image-git-repository
    trigger: true
  - get: oracle-image-version
    params: {bump: patch}
  - put: oracle-image-repository
    params:
      build: oracle-image-git-repository/OracleInstantClient/oraclelinux7/19
      tag_file: oracle-image-version/version
      tag_as_latest: true
  - put: oracle-image-version
    params: {file: oracle-image-version/version}

- name: create-sql-client-image
  plan:
  - in_parallel:
      steps:
      - get: concourse-images
        trigger: true
      - get: oracle-image-repository
        passed: [create-oracle-image]
        trigger: true
  - get: sql-client-image-version
    params: {bump: patch}
  - put: sql-image-repo
    params:
      build: concourse-images/task/sql-image
      tag_file: sql-client-image-version/version
      tag_as_latest: true
  - put: sql-client-image-version
    params: {file: sql-client-image-version/version}

- name: create-s3-resource-simple-image
  plan:
    - get: s3-resource-simple-repository
      trigger: true
    - get: s3-image-version
      params: {bump: patch}
    - put: s3-resource-simple-repo
      params:
        build: s3-resource-simple-repository
        tag_file: s3-image-version/version
        tag_as_latest: true
    - put: s3-image-version
      params: {file: s3-image-version/version}

- name: create-hardened-concourse-task-staging-image
  plan:
  - get: harden-concourse-images-repo
    trigger: true
  - get: hardened-concourse-image-staging-version
    params: {bump: patch}
  - task: build
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: concourse/oci-build-task
      inputs:
      - name: harden-concourse-images-repo
        path: .
      outputs:
      - name: image
      run:
        path: build
      params:
        BUILD_ARG_TOKEN: ((ua-token))
        CONTEXT: task/harden-concourse-tasks/
  - put: ecr-harden-concourse-task-staging-repo
    params:
      image: image/image.tar
      additional_tags: hardened-concourse-image-staging-version/version
  - put: hardened-concourse-image-staging-version
    params: {file: hardened-concourse-image-staging-version/version}

- name: create-hardened-s3-resource-simple-staging-image
  plan:
  - get: s3-resource-simple-repository
    trigger: true
  - get: harden-concourse-images-repo
    trigger: true
  - get: hardened-s3-resource-simple-image-version-staging
    params: {bump: patch}
  - task: build
    privileged: true
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: concourse/oci-build-task
      inputs:
      - name: harden-concourse-images-repo
        path: .
      outputs:
      - name: image
      run:
        path: build
      params:
        BUILD_ARG_TOKEN: ((ua-token))
        CONTEXT: task/s3-resource-simple/
  - put: ecr-harden-s3-resource-simple-staging-repo
    params:
      image: image/image.tar
      additional_tags: hardened-s3-resource-simple-image-version-staging/version
  - put: hardened-s3-resource-simple-image-version-staging
    params: {file: hardened-s3-resource-simple-image-version-staging/version}

- name: hardened-container-bosh-development-jumpbox
  plan:
  - get: ecr-harden-concourse-task-staging-repo
  - task: jumpbox
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          aws_access_key_id: ((aws-key))
          aws_secret_access_key: ((aws-secret))
          repository: harden-concourse-task
          aws_region: us-gov-west-1
          semver_constraint: ">= 1.0.0"
      run:
        path: sh
        args:
        - exit 1
      params:
        BOSH_DIRECTOR_NAME: development
        PROMPT_COLOR: "6" # cyan

resources:
- name: concourse-images
  type: git
  source:
    uri: ((concourse-task-image-git-url))
    branch: ((concourse-task-image-git-branch))
    commit_verification_keys: ((cloud-gov-pgp-keys))

- name: harden-concourse-images-repo
  type: git
  source:
    uri: ((concourse-task-image-git-url))
    branch: fix-node-version

- name: ecr-harden-concourse-task-staging-repo
  type: registry-image
  source:
    aws_access_key_id: ((aws-key))
    aws_secret_access_key: ((aws-secret))
    repository: harden-concourse-task-staging
    aws_region: us-gov-west-1
    semver_constraint: ">= 1.0.0"

- name: ecr-harden-s3-resource-simple-staging-repo
  type: registry-image
  source:
    aws_access_key_id: ((aws-key))
    aws_secret_access_key: ((aws-secret))
    repository: harden-s3-resource-simple-staging
    aws_region: us-gov-west-1
    semver_constraint: ">= 1.0.0"

- name: sql-image-repo
  type: docker-image
  source:
    email: ((docker-email))
    username: ((docker-username))
    password: ((docker-password))
    repository: ((sql-image-repository))

- name: concourse-tasks-image-repo
  type: docker-image
  source:
    email: ((docker-email))
    username: ((docker-username))
    password: ((docker-password))
    repository: ((concourse-tasks-repository))

- name: oracle-image-git-repository
  type: git
  source:
    uri: ((oracle-image-git-repository))
    branch: ((oracle-image-git-repository-branch))

- name: oracle-image-repository
  type: docker-image
  source:
    email: ((docker-email))
    username: ((docker-username))
    password: ((docker-password))
    repository: ((oracle-image-repository))

- name: s3-resource-simple-repository
  type: git
  source:
    uri: ((s3-resource-simple-git-repository))
    branch: ((s3-resource-simple-git-repository-branch))
    commit_verification_keys: ((cloud-gov-pgp-keys))

- name: s3-resource-simple-repo
  type: docker-image
  source:
    email: ((docker-email))
    username: ((docker-username))
    password: ((docker-password))
    repository: ((s3-resource-simple-image-repository))

- name: concourse-image-version
  type: semver
  source:
    driver: s3
    bucket: ((semver-bucket))
    key: concourse-docker-image-version
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))
    region_name: ((aws-region))
    initial_version: 1.0.0

- name: hardened-concourse-image-staging-version
  type: semver
  source:
    driver: s3
    bucket: ((semver-bucket))
    key: harden-concourse-docker-image-version-staging
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))
    region_name: ((aws-region))
    initial_version: 1.0.0

- name: hardened-s3-resource-simple-image-version-staging
  type: semver
  source:
    driver: s3
    bucket: ((semver-bucket))
    key: harden-s3-resource-simple-image-version-staging
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))
    region_name: ((aws-region))
    initial_version: 1.0.0

- name: s3-image-version
  type: semver
  source:
    driver: s3
    bucket: ((semver-bucket))
    key: s3-docker-image-version
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))
    region_name: ((aws-region))
    initial_version: 1.2.0

- name: oracle-image-version
  type: semver
  source:
    driver: s3
    bucket: ((semver-bucket))
    key: oracle-docker-image-version
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))
    region_name: ((aws-region))
    initial_version: 1.0.0

- name: sql-client-image-version
  type: semver
  source:
    driver: s3
    bucket: ((semver-bucket))
    key: sql-client-docker-image-version
    access_key_id: ((aws-access-key-id))
    secret_access_key: ((aws-secret-access-key))
    region_name: ((aws-region))
    initial_version: 1.0.0
